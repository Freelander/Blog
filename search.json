[{"title":"是时候让你项目用上 ViewBindings 了","url":"http://yoursite.com/2019/06/13/android-viewbindings/","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>相信大多数人在写 findViewById 都是烦恼的，不少人会使用 ButterKnife 来简化，利用插件会自动生成绑定 View 代码，可是一旦界面控件多时候，就会出现几十行甚至上百行的 BindView 代码。此时有没有更好的框架来帮我们呢？</p>\n<p>答案是有的，在前不久的 Google IO 2019 上面提到了 ViewBindings 概念，后来我详细了解后，发现这个东西可以理解为 DataBinding 的一部分，具体区别在于 ViewBindings 只是视图绑定部分。想更深入了解两者区别，可以看下 <a href=\"https://proandroiddev.com/new-in-android-viewbindings-the-difference-from-databinding-library-bef5945baf5e\" target=\"_blank\" rel=\"noopener\">这篇文章</a></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"构建-DataBingding-环境\"><a href=\"#构建-DataBingding-环境\" class=\"headerlink\" title=\"构建 DataBingding 环境\"></a>构建 DataBingding 环境</h3><p>在 App 模块的 build.gradle 文件中添加 DataBinding 配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    dataBinding &#123;</span><br><span class=\"line\">        enabled = true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在基类配置-Bingding-代码\"><a href=\"#在基类配置-Bingding-代码\" class=\"headerlink\" title=\"在基类配置 Bingding 代码\"></a>在基类配置 Bingding 代码</h3><h4 id=\"Activity\"><a href=\"#Activity\" class=\"headerlink\" title=\"Activity\"></a>Activity</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class CustomActivity&lt;VB extends ViewDataBinding&gt; extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private View mContentView;</span><br><span class=\"line\">    protected VB mViewBinding;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void setContentView(@LayoutRes int layoutResID) &#123;</span><br><span class=\"line\">        mContentView = View.inflate(this, layoutResID, null);</span><br><span class=\"line\">        mViewBinding = DataBindingUtil.bind(mContentView);</span><br><span class=\"line\">        super.setContentView(mContentView);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Fragment\"><a href=\"#Fragment\" class=\"headerlink\" title=\"Fragment\"></a>Fragment</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class CustomFragment&lt;VB extends ViewDataBinding&gt; extends BaseFragment &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private View mContentView;</span><br><span class=\"line\">    protected VB mViewBinding;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public View onCreateView(LayoutInflater inflater, ViewGroup container,</span><br><span class=\"line\">                             Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        return mContentView;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public void setContentView(int id) &#123;</span><br><span class=\"line\">        this.mContentView = getActivity().getLayoutInflater().inflate(id, mContainer, false);</span><br><span class=\"line\">        mViewBinding = DataBindingUtil.bind(mContentView);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><h4 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h4><p>在布局的最外层增加 <code>&lt;layout&gt;&lt;/layout&gt;</code> 标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;layout&gt;</span><br><span class=\"line\">    &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">        xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:background=&quot;@color/bg_grey_f2f2f2&quot;</span><br><span class=\"line\">        android:orientation=&quot;vertical&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;com.chicdeals.widget.CustomRegularTextView</span><br><span class=\"line\">            android:id=&quot;@+id/tv_app_cache&quot;</span><br><span class=\"line\">            style=&quot;@style/CommonRippleStyle&quot;</span><br><span class=\"line\">            android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">            android:layout_height=&quot;@dimen/space_50&quot;</span><br><span class=\"line\">            android:drawableEnd=&quot;@mipmap/ic_account_arrow_default&quot;</span><br><span class=\"line\">            android:drawablePadding=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">            android:paddingStart=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:paddingEnd=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:text=&quot;@string/account_change_password&quot;</span><br><span class=\"line\">            android:textColor=&quot;@color/text_grey_333333&quot;</span><br><span class=\"line\">            android:textSize=&quot;@dimen/textSize_15&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/layout&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SettingActivity extends CustomActivity&lt;SettingActivityBinding&gt; &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.setting_activity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void initView() &#123;</span><br><span class=\"line\">        super.initView();</span><br><span class=\"line\">        </span><br><span class=\"line\">        mViewBinding.tvAppCache.setText(getCacheSize());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"视图点击事件\"><a href=\"#视图点击事件\" class=\"headerlink\" title=\"视图点击事件\"></a>视图点击事件</h3><p>在引入 DataBinding 时，发现如果处理视图点击，还是需要逐一给视图设置点击事件的绑定，没有其他更好的方法，此时我选择了继续保留 ButterKnife 框架，可以快速绑定视图的点击事件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnClick(&#123;R.id.tv_change_pwd, R.id.tv_app_version, R.id.tv_app_cache, R.id.cv_sign_out&#125;)</span><br><span class=\"line\">public void onViewClicked(View view) &#123;</span><br><span class=\"line\">    switch (view.getId()) &#123;</span><br><span class=\"line\">        case R.id.tv_change_pwd:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.tv_app_version:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.tv_app_cache:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.cv_sign_out:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>到这里简述大概如何使用 DataBinding 中的 ViewBinding 部分了。此时有人疑惑为什么不说说 DataBinding 数据绑定部分？</p>\n<p>我简单说下几个原因：</p>\n<ol>\n<li>DataBinding 将部分逻辑移到布局文件，使得布局失去纯粹性，且逻辑变得有点乱，不利于阅读代码；</li>\n<li>如果某个布局 xml 中的 DataBinding 代码有误，编译时会全部布局文件报错，不好定位报错地方；</li>\n<li>在布局文件中插入了部分数据逻辑，使得文件失去了复用性。</li>\n</ol>\n<p>综上所述，我只建议大家使用 DataBinding 中的 View 绑定模块的 ViewBindings 框架，解决一个小小需求，替代 findViewById 使得项目代码更加简洁。</p>\n","categories":["Android"],"tags":["Android","DataBinding","ViewBindings"]},{"title":"欢迎来到我的新博客","url":"http://yoursite.com/2019/06/12/hello-blog/","content":"<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h2><ol>\n<li><a href=\"https://segmentfault.com/a/1190000004947261#articleHeader1\" target=\"_blank\" rel=\"noopener\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>\n<li><a href=\"https://www.jianshu.com/p/42aa637f614a\" target=\"_blank\" rel=\"noopener\">使用Hexo在Github上搭建专属博客之技术总结</a></li>\n<li><a href=\"http://forsigner.com/2016/03/10/fexo-doc-zh-cn/#%E5%BC%80%E5%A7%8B\" target=\"_blank\" rel=\"noopener\">主题配置</a></li>\n</ol>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL Port 4000 has been used. Try other port instead.</span><br><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure>\n\n<p>解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo hexo s -p 5000</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-命令\"><a href=\"#Hexo-命令\" class=\"headerlink\" title=\"Hexo 命令\"></a>Hexo 命令</h2><ol>\n<li><code>hexo generate (hexo g)</code> 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li>\n<li><code>hexo server (hexo s)</code> 启动本地web服务，用于博客的预览</li>\n<li><code>hexo deploy (hexo d)</code> 部署播客到远端（比如github, heroku等平台）</li>\n<li><code>hexo new &quot;postName&quot;</code> #新建文章</li>\n<li><code>hexo new page &quot;pageName&quot;</code> #新建页面</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo n == hexo new</span><br><span class=\"line\">$ hexo g == hexo generate</span><br><span class=\"line\">$ hexo s == hexo server</span><br><span class=\"line\">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何关联上-GitHub\"><a href=\"#如何关联上-GitHub\" class=\"headerlink\" title=\"如何关联上 GitHub\"></a>如何关联上 GitHub</h2><ol>\n<li>Install hexo-deployer-git.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Edit <code>_config.yml</code> (with example values shown below as comments):</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git   </span><br><span class=\"line\">  repo: &lt;repository url&gt;  #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class=\"line\">  branch: [branch] #published</span><br><span class=\"line\">  message: [message]  #leave this blank</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"绑定个人域名\"><a href=\"#绑定个人域名\" class=\"headerlink\" title=\"绑定个人域名\"></a>绑定个人域名</h2><p>注册域名地址推荐：<a href=\"https://www.namesilo.com\" target=\"_blank\" rel=\"noopener\">namesilo</a></p>\n<p>然后在 GitHub 你的博客仓库 Setting 页面配置域名</p>\n<p><img src=\"/images/2019/06/01.png\" alt=\"image\"></p>\n<p>保存过几分钟就可以访问。</p>\n<h3 id=\"Hexo-主题模板\"><a href=\"#Hexo-主题模板\" class=\"headerlink\" title=\"Hexo 主题模板\"></a>Hexo 主题模板</h3><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></p>\n<h2 id=\"看中的博客模版\"><a href=\"#看中的博客模版\" class=\"headerlink\" title=\"看中的博客模版\"></a>看中的博客模版</h2><ol>\n<li><a href=\"https://fuzhouxxdong.github.io/hexo-theme-dxx/\" target=\"_blank\" rel=\"noopener\">https://fuzhouxxdong.github.io/hexo-theme-dxx/</a></li>\n<li><a href=\"http://forsigner.com/\" target=\"_blank\" rel=\"noopener\">http://forsigner.com/</a></li>\n<li><a href=\"https://blog.devzeng.com/\" target=\"_blank\" rel=\"noopener\">https://blog.devzeng.com/</a></li>\n<li><a href=\"https://paugram.com/\" target=\"_blank\" rel=\"noopener\">https://paugram.com/</a></li>\n<li><a href=\"http://qiubaiying.top/\" target=\"_blank\" rel=\"noopener\">http://qiubaiying.top/</a></li>\n</ol>\n","categories":["Blog"],"tags":["Blog"]},{"title":"如何利用 Google Cloud 搭建 VPS","url":"http://yoursite.com/2018/06/06/google-clound/","content":"<h3 id=\"Google-Cloud-官网\"><a href=\"#Google-Cloud-官网\" class=\"headerlink\" title=\"Google Cloud 官网\"></a>Google Cloud 官网</h3><p><a href=\"https://cloud.google.com/\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/</a></p>\n<h3 id=\"活动\"><a href=\"#活动\" class=\"headerlink\" title=\"活动\"></a>活动</h3><p>现在申请 Google Cloud 赠送免费使用 300美元一年的有效期，使⽤用最低配的话，可以玩一年，每个⽉有 86G 的流量，个人使⽤足够了吧……</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ul>\n<li>一张 VISA信⽤用卡</li>\n<li>Google 账户</li>\n<li>由于 Google 在中国是不存在的，所以先要有代理</li>\n<li>下载 ShadowsocksX-NG，<a href=\"https://github.com/shadowsocks/ShadowsocksX-NG\" target=\"_blank\" rel=\"noopener\">地址</a></li>\n</ul>\n<h3 id=\"开始申请\"><a href=\"#开始申请\" class=\"headerlink\" title=\"开始申请\"></a>开始申请</h3><p>首先需要登录你的 Google 账号，如果没有的话，自己去创建一个，这就不多说了，登录成功之后，进入到 Google Cloud <a href=\"https://cloud.google.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p>此时你会看到右上角有个 免费试用 的入口，点击进去</p>\n<p><img src=\"/images/2018/06/01-01.png\" alt></p>\n<p>进去之后选择国家为 美国，为什么不选中国呢？因为没有中国可选；同意并继续</p>\n<p><img src=\"/images/2018/06/01-2.png\" alt></p>\n<p>接下来就是下面的界面了，账号选择个人，填写好注册信息，个人信息地址可以虚拟一个美国身份，推荐随机生成美国身份网站 <a href=\"http://www.haoweichi.com/Index/random\" target=\"_blank\" rel=\"noopener\">地址</a>；</p>\n<p>填写你的一张 VISA 信用卡，信用卡会扣除 1 美元，这不用担心只是验证你这张信用卡是否可用，过一会就会退还给你</p>\n<p><img src=\"/images/2018/06/01-3.png\" alt></p>\n<p>信息填完后，点击开始免费试用，至此你已成功创建了 Google cloud 账号，并且获得免费赠送的 300 美元</p>\n<h3 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h3><p><strong>1. 创建一个项目</strong></p>\n<p>完成上面步骤之后，进入到大概下面的界面，点击箭头位置开始创建一个项目</p>\n<p><img src=\"/images/2018/06/01-4.png\" alt></p>\n<p>进入到这个界面，项目名称随便你起，位置不用关，直接点创建</p>\n<p><img src=\"/images/2018/06/01-5.png\" alt></p>\n<p><strong>2. 设定防火墙</strong></p>\n<p>入口：菜单依次点击【网络】–【防火墙规则】–【创建防火墙规则】</p>\n<p><img src=\"/images/2018/06/01-6.png\" alt></p>\n<p>先来看下我的配置</p>\n<p><img src=\"/images/2018/06/01-7.png\" alt></p>\n<p>主要修改点：</p>\n<ul>\n<li>流量方向：入站  </li>\n<li>对匹配项执行的操作：允许  </li>\n<li>目标：网络中所有实例  </li>\n<li>来源IP地址范围：0.0.0.0/0  </li>\n<li>协议和端口：全部允许  </li>\n<li>其他默认即可</li>\n</ul>\n<p><strong>3. 申请静态IP</strong></p>\n<p>这个步骤可有可⽆，如果是拿来做 SS 服务器，最好还是申请一个，不然的话每次重启ip地址都会变化，客户端又得重新配置了</p>\n<p>菜单依次点击【网络】–【外部IP地址】–【保留静态IP】</p>\n<p><img src=\"/images/2018/06/01-8.png\" alt></p>\n<p>据说区域选择亚洲东部，国内访问会比较快，这个我不知道没有验证，反正我选择了美国</p>\n<blockquote>\n<p>注意：静态 IP 只能申请一个</p>\n</blockquote>\n<h3 id=\"创建计算引擎\"><a href=\"#创建计算引擎\" class=\"headerlink\" title=\"创建计算引擎\"></a>创建计算引擎</h3><p>菜单一次点击【计算】–【Compute Engine】–【VM 实例】</p>\n<p><img src=\"/images/2018/06/01-9.png\" alt></p>\n<p><img src=\"/images/2018/06/01-10.png\" alt></p>\n<p><img src=\"/images/2018/06/01-11.png\" alt></p>\n<p>主要修改点：</p>\n<ul>\n<li>机器类型：微型(一个共享 vCPU) （右边会有每个月的金额估算值，根据需要吧，选这个是5美元/月，能用一年！）</li>\n<li>选择启动磁盘（系统），我选择的是 Debian</li>\n<li>访问权限范围：允许默认访问权限</li>\n<li>（打开管理、磁盘、网络、ssh 密钥选项）选择【网络】<br>网络–外部IP选择临时</li>\n</ul>\n<p>至此，Google cloud 服务器已经配置完成，可以像正常使用 VPS 一样操作了。</p>\n<h3 id=\"搭建-SS\"><a href=\"#搭建-SS\" class=\"headerlink\" title=\"搭建 SS\"></a>搭建 SS</h3><p>使用 Google Cloud 自带的浏览器 SSH，推荐使用！</p>\n<p><img src=\"/images/2018/06/01-12.png\" alt></p>\n<ol>\n<li>先输入 <code>sudo -i</code> 命令进入到 root 账户</li>\n<li>搭建 Shadow-socks，推荐秋水的一键go版本，输入下面命令</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh</span><br><span class=\"line\">chmod +x shadowsocks-go.sh</span><br><span class=\"line\">./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log</span><br></pre></td></tr></table></figure>\n\n<p>输入命令后，一路回车 Enter 就 Ok，当然这个过程你可以自己定义 端口、密码、加密方式这些信息，执行完之后就会得到如下面信息</p>\n<p><img src=\"/images/2018/06/01-13.png\" alt></p>\n<blockquote>\n<p>该代理已经失效~~</p>\n</blockquote>\n<h3 id=\"SS-服务相关命令\"><a href=\"#SS-服务相关命令\" class=\"headerlink\" title=\"SS 服务相关命令\"></a>SS 服务相关命令</h3><p>Shadowsocks-Go 版（install | uninstall | start | stop | restart | status）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 root 用户登录，运行安装以及卸载的命令：</span><br><span class=\"line\"># 进入 root 用户</span><br><span class=\"line\">sudo -i</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">./shadowsocks-go.sh install</span><br><span class=\"line\"># 卸载</span><br><span class=\"line\">./shadowsocks-go.sh uninstall</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装完成后</span><br><span class=\"line\"># 重启</span><br><span class=\"line\">/etc/init.d/shadowsocks restart</span><br><span class=\"line\"># 停止</span><br><span class=\"line\">/etc/init.d/shadowsocks stop</span><br><span class=\"line\"># 启动</span><br><span class=\"line\">/etc/init.d/shadowsocks start</span><br><span class=\"line\"># 查看运行状态</span><br><span class=\"line\">/etc/init.d/shadowsocks status</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看配置信息</span><br><span class=\"line\">vim /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://51.ruyo.net/2144.html\" target=\"_blank\" rel=\"noopener\">Google Cloud服务免费申请试用以及使用教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/6bd66829a1ce\" target=\"_blank\" rel=\"noopener\">用Google Cloud搭建免费一年的SS</a></li>\n<li><a href=\"https://teddysun.com/392.html\" target=\"_blank\" rel=\"noopener\">Shadowsocks-go一键安装脚本</a></li>\n</ul>\n","categories":["VPN"],"tags":["翻墙","Google Cloud","VPN"]},{"title":"Mac 使用 Crontab 定时工具","url":"http://yoursite.com/2018/03/24/mac-crontab/","content":"<h3 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h3><ol>\n<li><code>sudo /usr/sbin/cron start</code> (启动)</li>\n<li><code>sudo /usr/sbin/cron restart</code> (重启)</li>\n<li><code>sudo /usr/sbin/cron stop</code> (停止)</li>\n<li><code>sudo launchctl list | grep cron</code> (查看是否启动)</li>\n<li><code>man crontab</code> (查看crontab命令的用法)</li>\n<li><code>man 5 crontab</code> (查看crontab定时任务的格式)</li>\n<li><code>sudo crontab -e</code> (进入编辑器，添加或修改定时任务)</li>\n<li><code>sudo crontab -l</code> (查看已经添加的定时任务)</li>\n</ol>\n<h3 id=\"添加定时任务\"><a href=\"#添加定时任务\" class=\"headerlink\" title=\"添加定时任务\"></a>添加定时任务</h3><blockquote>\n<p>55 23 * * * python3 /Users/hugo/Development/GooglePlayReview/app_reviews.py</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo crontab -e</span><br><span class=\"line\"># 此时会进入 vi 编辑器！注意到，每项工作都是一行。</span><br><span class=\"line\"># 基本格式：* * * * * command </span><br><span class=\"line\">0 12 * * * mail dmtsai -s &quot;at 12:00&quot; &lt; /home/dmtsai/.bashrc</span><br><span class=\"line\">#分 时 日 月 周 |&lt;==============指令串========================&gt;|</span><br><span class=\"line\">$ sudo crontab -l</span><br><span class=\"line\"># 查看已经添加的定时任务</span><br></pre></td></tr></table></figure>\n\n<p>前面五个参数(星号)代表的意义：</p>\n<table>\n<thead>\n<tr>\n<th>意义</th>\n<th>分钟</th>\n<th>小时</th>\n<th>日</th>\n<th>月</th>\n<th>星期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数字范文</td>\n<td>0~59</td>\n<td>0~23</td>\n<td>1~31</td>\n<td>1~12</td>\n<td>0~7（0:周日)</td>\n</tr>\n</tbody></table>\n<h3 id=\"Crontab-时区与系统不一致\"><a href=\"#Crontab-时区与系统不一致\" class=\"headerlink\" title=\"Crontab 时区与系统不一致\"></a>Crontab 时区与系统不一致</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"https://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/\" target=\"_blank\" rel=\"noopener\">OSX系统添加定时任务</a><br><a href=\"https://www.jianshu.com/p/4addd9b455f2\" target=\"_blank\" rel=\"noopener\">Mac中的定时任务利器：launchctl</a><br><a href=\"https://blog.csdn.net/biyongyao/article/details/77791238\" target=\"_blank\" rel=\"noopener\">Mac 开启 crontab 定时任务调试</a></p>\n","categories":["工具"],"tags":["工具"]},{"title":"小米手机 Application Installation Failed","url":"http://yoursite.com/2018/01/13/xiaomi-install-failed/","content":"<p>今天在开发中遇到了一个比较奇葩的问题，手机连接上电脑并且已经在 Android Studio 运行窗口看到设备，但是 App 就是一直安装不到 小米6 手机上, 也不能通过 adb 命令安装。</p>\n<p><img src=\"/images/2018/01/01.png\" alt></p>\n<p>然后疯狂查找了一波资料，顺便在这里做了下解决过程的记录。</p>\n<h3 id=\"解决步骤：\"><a href=\"#解决步骤：\" class=\"headerlink\" title=\"解决步骤：\"></a>解决步骤：</h3><ol>\n<li>确认打开开发者选项模式（设置-&gt;关于手机-&gt;MIUI版本,连续点击MIUI版本）</li>\n<li>开启开发者选项以及 USB 调试</li>\n<li>再运行项目看下是否可以</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<ol start=\"4\">\n<li>关闭 “开启MIUI优化”（设置-&gt;更多设置-&gt;开发者选项-&gt;启动MIUI优化）</li>\n<li>重启手机，再次运行项目看看</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<p>回到 Android Studio 开发工具</p>\n<ol start=\"6\">\n<li>在 File &gt; Settings &gt; Build,Execution,Deployment &gt; Instant Run &gt;取消选择 (Enable Instant Run to hot swap code)</li>\n<li>再次运行项目看看</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<ol start=\"8\">\n<li>尝试 Clen Project &gt;&gt; Rebuild Project &gt;&gt; 再尝试下运行项目</li>\n</ol>\n<blockquote>\n<p>还是不行，兄dei 那就换手机吧<br>还有一种情况是手机的存储太低了，导致无法安装 app</p>\n</blockquote>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ol>\n<li><a href=\"https://blog.csdn.net/forwardyzk/article/details/68489711\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forwardyzk/article/details/68489711</a></li>\n<li><a href=\"https://stackoverflow.com/questions/42687607/application-installation-failed-in-android-studio\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/42687607/application-installation-failed-in-android-studio</a></li>\n</ol>\n","categories":["随笔"],"tags":[]},{"title":"带你玩转 Surge 网络调试神器","url":"http://yoursite.com/2017/12/12/surge/","content":"<h3 id=\"简单了解\"><a href=\"#简单了解\" class=\"headerlink\" title=\"简单了解\"></a>简单了解</h3><p>Surge 是基于 iOS 9 新增的“网络扩展”（Network Extension）API[3] 开发的一款网络调试工具。作为首个借用此软件可使用 Shadowsocks 的 iOS 9 应用，中国大陆网友将其广泛运用于突破网络审查。</p>\n<p>Surge 可做很多事情，比如阻挡广告、网络调试、流量跟踪、代理上网等等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>Mac 版下载 <a href=\"https://nssurge.com/\" target=\"_blank\" rel=\"noopener\">地址</a>（Windows 暂不支持），下载完成后解压文件夹得到 Surge 程序，将其拖放到应用程序中打开。</p>\n<p>启动 Surge 后勾选下拉菜单中的 <strong>Set as System Proxy</strong> 即可自动向系统网络设置添加必要的参数，因为需要修改系统网络设置，首次勾选时需要输入管理员密码进行确认，去掉 Set as System Proxy 的勾选，会清除网络设置中的代理相关设置。</p>\n<p>打开「系统偏好设置 — 网络 - Wi-Fi高级」设置 HTTP 和 HTTPS 代理： 127.0.0.1:6152 ，以及 SOCKS 代理中设置为 127.0.0.1:6153，<br>并添加忽略这些主机与域的代理设置（Bypass Proxy）：127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local</p>\n<p><img src=\"/images/2017/12/02-1.png\" alt></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>Surge 默认配置文件的路径在 /Users/Freelander/Documents/Surge 下 Default.conf，文件夹还提供简单中文配置例子，里面有很多注释教你如何配置。</p>\n<p>配置文件基础最终我选择了在一份 <a href=\"https://raw.githubusercontent.com/lhie1/Surge/master/Surge.conf\" target=\"_blank\" rel=\"noopener\">开源配置文件</a> 基础上进行修改。已上传到 <a href=\"https://github.com/Freelander/Blog/blob/master/201708/code/MySurge.conf\" target=\"_blank\" rel=\"noopener\">GitHub</a>。</p>\n<p>将其内容复制到上面所说的路径 Default.conf 文件中，然后保存点击下拉菜单中的 Reload Profile from File，此时配置文件中的配置就生效了。</p>\n<p>首先来看如何配置 ss 代理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Proxy]</span><br><span class=\"line\"> 🇺🇸US-l = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇺🇸US-m = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇯🇵JP  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇸🇬SG  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇩🇪DE  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\">   </span><br><span class=\"line\">[Proxy Group]</span><br><span class=\"line\">Proxy = select,🇺🇸US-l,🇺🇸US-m,🇯🇵 JP,🇸🇬SG,🇩🇪DE</span><br></pre></td></tr></table></figure>\n\n<p>[Proxy]是具体的代理配置，它下面就是 5 个 ss 服务器节点, 这里只是 5 个国家例子，根据你拥有的 ss 账号数来决定，拥有几个账号就留下其中几个对应国旗配置就好。表面上看就是 5 个键值对(键可以自定义)，键中加上国旗可以很直观的区分不同国家的 ss 节点，值中的变量分别表示：<br>ss-server host: ss 主机，ip 或域名<br>ss-server port: ss 主机端口<br>ss encrypt type: 加密方式<br>ss-password: ss 密码<br>custom 不能改，是一个约定类型(ss 协议)。</p>\n<p>保存上面配置，点击下拉菜单中的 Reload Profile from File，配置生效，就会出现下图</p>\n<p><img src=\"/images/2017/12/02-2.png\" alt></p>\n<p>接着打开浏览器输入 <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/</a> 回车<br>你会发现外面的世界如此精彩</p>\n<h3 id=\"共享上网\"><a href=\"#共享上网\" class=\"headerlink\" title=\"共享上网\"></a>共享上网</h3><p>在局域网内，其他设备无须再安装任何软件，即可与我一起到外面世界遨游。其他设备只需要简单的在 wifi 设置中添加一个 HTTP 代理即可</p>\n<p>图片来源 <a href=\"https://medium.com/@scomper/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91-dd29e18853da\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p><img src=\"/images/2017/12/02-3.png\" alt></p>\n<h3 id=\"同时使用-Surge-Charles-分析网络\"><a href=\"#同时使用-Surge-Charles-分析网络\" class=\"headerlink\" title=\"同时使用 Surge + Charles 分析网络\"></a>同时使用 Surge + Charles 分析网络</h3><p>打开 Charles 的 External Proxy Settings 设置 Charles 的外部代理为 Surge 的端口，即与上面系统网络设置的代理一致</p>\n<p><img src=\"/images/2017/12/02-4.png\" alt></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 基于域名判断并屏蔽（REJECT）请求  </span><br><span class=\"line\">DOMAIN,pingma.qq.com,REJECT  </span><br><span class=\"line\">// 基于域名后缀判断屏蔽（REJECT）请求  </span><br><span class=\"line\">DOMAIN-SUFFIX,flurry.com,REJECT  </span><br><span class=\"line\">// 基于关键词后缀判断走代理（Proxy），强制不尊重系统代理的请求走</span><br><span class=\"line\">Packet-Tunnel-Provider DOMAIN-KEYWORD,google,Proxy,force-remote-dns  </span><br><span class=\"line\">// 基于域名后缀判断请求走直连（DIRECT）  </span><br><span class=\"line\">DOMAIN-SUFFIX,126.net,DIRECT  </span><br><span class=\"line\">// Telegram.app 指定“no-resolve”Surge 忽略这个规则与域的请求。  </span><br><span class=\"line\">IP-CIDR,91.108.56.0/22,Proxy,no-resolve  </span><br><span class=\"line\">// 判断是否是局域网，如果是，走直连  </span><br><span class=\"line\">IP-CIDR,192.168.0.0/16,DIRECT  </span><br><span class=\"line\">// 判断服务器所在地，如果是国内，走直连  </span><br><span class=\"line\">GEOIP,CN,DIRECT  </span><br><span class=\"line\">// 其他的全部走代理  </span><br><span class=\"line\">FINAL,Proxy  </span><br><span class=\"line\">// 其他的全部不走代理  </span><br><span class=\"line\">FINAL,DIRECT</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意坑\"><a href=\"#注意坑\" class=\"headerlink\" title=\"注意坑\"></a>注意坑</h3><p>写完 [Rule] 后面需要加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Rule] </span><br><span class=\"line\"></span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br><span class=\"line\">GEOIP,CN,DIRECT</span><br><span class=\"line\">FINAL,Proxy</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://medium.com/@Blankwonder/surge-%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-8aa3304fb3bb\" target=\"_blank\" rel=\"noopener\">Surge 原理与实现</a></li>\n<li><a href=\"https://medium.com/@scomper/surge-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-a1533c10e80b\" target=\"_blank\" rel=\"noopener\">Surge 新手使用指南</a></li>\n<li><a href=\"https://manual.nssurge.com/overview/configuration.html\" target=\"_blank\" rel=\"noopener\">Surge 官方配置教程</a></li>\n<li><a href=\"http://cloudstone.xin/2016/10/31/Mac-Surge-2-%E5%88%9D%E4%BD%93%E9%AA%8C/\" target=\"_blank\" rel=\"noopener\">Surge for Mac 2 初体验与教程</a></li>\n<li><a href=\"https://github.com/lhie1/Surge\" target=\"_blank\" rel=\"noopener\">Surge config</a></li>\n<li><a href=\"https://medium.com/@scomper/surge-for-mac-%E7%AE%80%E6%98%8E%E6%8C%87%E5%8D%97-f6f357b8f09c\" target=\"_blank\" rel=\"noopener\">Surge for Mac 简明指南</a></li>\n<li><a href=\"https://medium.com/@scomper/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91-dd29e18853da\" target=\"_blank\" rel=\"noopener\">局域网其他设备共享上网</a></li>\n<li><a href=\"https://github.com/wujunchuan/wujunchuan.github.io/issues/1\" target=\"_blank\" rel=\"noopener\">解决Surge for Mac+Charles同时分析网络请求的办法 </a></li>\n</ul>\n","categories":["VPN"],"tags":["翻墙","VPN","Surge"]},{"title":"Android 中东阿拉伯语适配，看这一篇够了","url":"http://yoursite.com/2017/06/06/android-rtl/","content":"<h3 id=\"RTL-语言由来\"><a href=\"#RTL-语言由来\" class=\"headerlink\" title=\"RTL 语言由来\"></a>RTL 语言由来</h3><p>RTL 是 Right-to-left(从右向左) 的缩写。其意为人们书写阅读习惯是从右向左，朝左继续的，常见的 RTL 语言有阿拉伯语，希伯来语等。</p>\n<p>看一下对比：</p>\n<table>\n<thead>\n<tr>\n<th>LTR</th>\n<th>RTL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/images/2017/06/01-2.jpg\" alt></td>\n<td><img src=\"/images/2017/06/01-3.jpg\" alt></td>\n</tr>\n</tbody></table>\n<p>那么对于这种从右到左的习惯，在 Android 布局中有没有支持呢？</p>\n<p>答案是有的：从 Android 4.2 即 SDK 17 开始，提供了全面的本地布局支持，允许镜像布局，可以同时支持 RTL 和 LTR。</p>\n<p>接下来我将介绍如何一步一步适配阿拉伯语。</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><table>\n<thead>\n<tr>\n<th>name</th>\n<th>desc</th>\n<th>chinese</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:layoutDirection</td>\n<td>attribute for setting the direction of a component’s layout</td>\n<td>设置组件的布局排列方向</td>\n</tr>\n<tr>\n<td>android:textDirection</td>\n<td>attribute for setting the direction of a component’s text</td>\n<td>设置组件的文字排列方向</td>\n</tr>\n<tr>\n<td>android:textAlignment</td>\n<td>attribute for setting the alignment of a component’s text</td>\n<td>设置文字的对齐方式</td>\n</tr>\n<tr>\n<td>getLayoutDirectionFromLocale()</td>\n<td>method for getting the Locale-specified direction</td>\n<td>获取指定地区的惯用布局方式</td>\n</tr>\n</tbody></table>\n<h3 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h3><p>在 AndroidManifest.xml 文件中 application 节点添加支持从右到左布局方式代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;application</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        android:supportsRtl=&quot;true&quot; &gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&lt;/application&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换语言\"><a href=\"#切换语言\" class=\"headerlink\" title=\"切换语言\"></a>切换语言</h3><p>相关链接：<a href=\"https://stackoverflow.com/questions/2900023/change-language-programmatically-in-android\" target=\"_blank\" rel=\"noopener\">change-language-programmatically-in-android</a><br>对应国家语言代码: <a href=\"https://stackoverflow.com/questions/7973023/what-is-the-list-of-supported-languages-locales-on-android\" target=\"_blank\" rel=\"noopener\">what-is-the-list-of-supported-languages-locales-on-android</a><br>下面切换语言方式 updateConfiguration 方法在 Api 25 已经过时, 新的切换方式实例 <a href=\"https://github.com/DroidKaigi/conference-app-2017/pull/315/files\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String languageToLoad  = &quot;ar&quot;; // your language</span><br><span class=\"line\">Resources res = getResources(); </span><br><span class=\"line\">DisplayMetrics dm = res.getDisplayMetrics();</span><br><span class=\"line\">Locale locale = new Locale(languageToLoad); </span><br><span class=\"line\">Locale.setDefault(locale);</span><br><span class=\"line\">Configuration config = new Configuration();</span><br><span class=\"line\">config.locale = locale;</span><br><span class=\"line\">res.updateConfiguration(conf, dm);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"AS-一键适配\"><a href=\"#AS-一键适配\" class=\"headerlink\" title=\"AS 一键适配\"></a>AS 一键适配</h3><p>AS 支持一键适配 RTL，主要是在原来 Layout 中设置 Left 和 Right 属性的补充添加 Start 和 End 属性（你们在写布局的时候是不是很少用到 paddingStart、marginStart？接下来你们写布局的时候可不能再偷懒了，该加的还是得加上)</p>\n<p>Start 属性在 LTR 中对应 Left，在 RTL 中对应 Right，在API 17开始支持，为了兼容低版本，需要同时有 Left 和 Start。从市场来看，Android 4.2 系统以下的手机用户已经不多了，我的建议是可以不兼容，具体还得你们看自家产品在 4.2 系统以下用户数。</p>\n<blockquote>\n<p>Refactor &gt; Add RTL Support Where Possible…</p>\n</blockquote>\n<img src=\"/images/2017/06/01-1.png\" width=\"516px\" height=\"379px\">\n\n<h3 id=\"利用第三方插件\"><a href=\"#利用第三方插件\" class=\"headerlink\" title=\"利用第三方插件\"></a>利用第三方插件</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://github.com/znyang/gradle-android-rtl\" target=\"_blank\" rel=\"noopener\">gradle-android-rtl</a></td>\n<td>自动修复布局文件中未添加RTL支持的标签</td>\n</tr>\n</tbody></table>\n<p>与 AS 插件的比较：</p>\n<ul>\n<li>性能更好。在处理大批量文件修改时，用AS工具会出现卡顿</li>\n<li>支持padding标签的补齐</li>\n</ul>\n<h3 id=\"使用全局样式\"><a href=\"#使用全局样式\" class=\"headerlink\" title=\"使用全局样式\"></a>使用全局样式</h3><h4 id=\"EditText\"><a href=\"#EditText\" class=\"headerlink\" title=\"EditText\"></a>EditText</h4><p>发现 EditText 控件基本都需要设置下面两个属性<br>相关链接：<a href=\"https://stackoverflow.com/questions/10903647/set-a-consistent-style-to-all-edittext-for-e-g\" target=\"_blank\" rel=\"noopener\">set-a-consistent-style-to-all-edittext-for-e-g</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android:textAlignment=&quot;viewStart&quot;</span><br><span class=\"line\">android:gravity=&quot;start&quot;</span><br></pre></td></tr></table></figure>\n\n<p>那我们就可以在 style.xml 样式中全部 EditText 都设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       &lt;item name=&quot;editTextStyle&quot;&gt;@style/EditTextStyle.Alignment&lt;/item&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;EditTextStyle.Alignment&quot; parent=&quot;@android:style/Widget.EditText&quot;&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textAlignment&quot;&gt;viewStart&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:gravity&quot;&gt;start&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textDirection&quot;&gt;locale&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"TextView\"><a href=\"#TextView\" class=\"headerlink\" title=\"TextView\"></a>TextView</h4><p>全局给所有 TextView 添加一个 RTL 属性<br>相关链接:<a href=\"https://stackoverflow.com/questions/3078081/setting-global-styles-for-views-in-android\" target=\"_blank\" rel=\"noopener\">setting-global-styles-for-views-in-android</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       &lt;item name=&quot;android:textViewStyle&quot;&gt;@style/TextViewStyle.TextDirection&lt;/item&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;TextViewStyle.TextDirection&quot; parent=&quot;android:Widget.TextView&quot;&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textDirection&quot;&gt;locale&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断是否是-RTL-布局\"><a href=\"#判断是否是-RTL-布局\" class=\"headerlink\" title=\"判断是否是 RTL 布局\"></a>判断是否是 RTL 布局</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextUtilsCompat.getLayoutDirectionFromLocale(Locale.getDefault()) == LayoutDirection.RTL</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对集合进行倒序处理\"><a href=\"#对集合进行倒序处理\" class=\"headerlink\" title=\"对集合进行倒序处理\"></a>对集合进行倒序处理</h3><p>在某些场合下, 这个方法很有用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Collections.reverse(List&lt;?&gt; list);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码动态设置控件-setMargins\"><a href=\"#代码动态设置控件-setMargins\" class=\"headerlink\" title=\"代码动态设置控件 setMargins\"></a>代码动态设置控件 setMargins</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(</span><br><span class=\"line\">                ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">params.setMargins(10, 0, 10, 0);</span><br><span class=\"line\">params.setMarginEnd(10);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ViewPager\"><a href=\"#ViewPager\" class=\"headerlink\" title=\"ViewPager\"></a>ViewPager</h3><p>相关链接: <a href=\"https://stackoverflow.com/questions/37196714/tabs-swipe-direction-in-right-to-left-android-app\" target=\"_blank\" rel=\"noopener\">tabs-swipe-direction-in-right-to-left-android-app</a></p>\n<blockquote>\n<p>Android 官方控件大多支持 RTL，ViewPager 除外，GitHub 上面有人对 ViewPager 进行修改支持 RTL, <a href=\"https://github.com/diego-gomez-olvera/RtlViewPager\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n</blockquote>\n<h3 id=\"适配总结\"><a href=\"#适配总结\" class=\"headerlink\" title=\"适配总结\"></a>适配总结</h3><ol>\n<li>横向布局 LinearLayout ，可以使用 FrameLayout，控件需要靠左或靠右可以使用 layout_gravity 设置对应属性</li>\n<li>切换阿拉伯语时，网格布局 item 之间的距离会出现增大问题，处理方法是：网格分割线 ItemDecoration 需要加入语言来判断，调换原来设置左右的边距即可</li>\n<li>禁止掉之前的侧滑返回，以免出现冲突</li>\n<li>一些方向图标，重新做一个相对方向的放到 mipmap-ldrtl-xxxhdpi 包下</li>\n<li>动画翻转, 放在 anim-ldrtl 将对应的动画进行反向处理</li>\n<li>布局里如果设置了 paddingLeft、drawableLeft 等等这些属性更改为一个支持 RTL 的属性 paddingStart、drawableStart；但是有些地方可以不加的，例如：购物车上的数量徽章，加了之后感觉怪怪的，所以还是不加了</li>\n<li>利用在 AS 右边的预览布局工具中的语言切换工具，切换成阿拉伯语，能实时看到布局的效果图</li>\n<li>EditText 添加 android:layoutDirection=”locale” ，如果外面有 TextInputLayout 的需给它设置 android:textDirection=”locale” ，如果输入类型时密码时还需添加一个属性 android:textAlignment=”viewStart”</li>\n<li>TextView 需要加上 android:textAlignment=”viewStart 或 viewEnd” 以及 android:textDirection=”locale”</li>\n<li>RecyclerView 网络布局的可以考虑使用 StaggeredGridLayoutManager ，如果数量太多的网格布局，不太建议使用，可能会出现滑动混乱</li>\n<li>阿拉伯语目录下的 String.xml 文件, 出现占位符 d% 需要注意改为 %d, 但又并不是所有都改成这样, 目前我发现当代码中使用了 Toast 和 SpannableString 属性的就需要更改为 %d</li>\n</ol>\n<h3 id=\"建议计划\"><a href=\"#建议计划\" class=\"headerlink\" title=\"建议计划\"></a>建议计划</h3><ol>\n<li>从基础类开始入手，判断是否是阿拉伯语，如果是需要将界面设置为从右到左的显示方式</li>\n<li>分模块进行适配</li>\n<li>复杂的模块，可以放到 layout-ldrtl 包下，单独做一个布局来适配阿拉伯语，例如详情页</li>\n</ol>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ol>\n<li><a href=\"https://android-developers.googleblog.com/2013/03/native-rtl-support-in-android-42.html\" target=\"_blank\" rel=\"noopener\">https://android-developers.googleblog.com/2013/03/native-rtl-support-in-android-42.html</a></li>\n<li><a href=\"https://medium.com/@zhangqichuan/rtl-support-in-android-898e11f31561\" target=\"_blank\" rel=\"noopener\">https://medium.com/@zhangqichuan/rtl-support-in-android-898e11f31561</a></li>\n<li><a href=\"https://mobikul.com/just-few-steps-to-make-your-app-rtl-supportable/\" target=\"_blank\" rel=\"noopener\">https://mobikul.com/just-few-steps-to-make-your-app-rtl-supportable/</a></li>\n<li><a href=\"https://blog.robustastudio.com/featured/android-rtl-support/\" target=\"_blank\" rel=\"noopener\">https://blog.robustastudio.com/featured/android-rtl-support/</a></li>\n<li><a href=\"http://blog.csdn.net/figo0423/article/details/50241363\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/figo0423/article/details/50241363</a></li>\n<li><a href=\"http://blog.csdn.net/wxx614817/article/details/50586388\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/wxx614817/article/details/50586388</a></li>\n<li><a href=\"http://jiajixin.cn/2016/10/08/android_adapt_rtl/\" target=\"_blank\" rel=\"noopener\">http://jiajixin.cn/2016/10/08/android_adapt_rtl/</a></li>\n<li><a href=\"http://www.apkbus.com/blog-327085-57866.html\" target=\"_blank\" rel=\"noopener\">http://www.apkbus.com/blog-327085-57866.html</a></li>\n<li><a href=\"http://droidyue.com/blog/2014/07/07/support-rtl-in-android/index.html\" target=\"_blank\" rel=\"noopener\">http://droidyue.com/blog/2014/07/07/support-rtl-in-android/index.html</a></li>\n<li><a href=\"http://chuansong.me/n/920084451521\" target=\"_blank\" rel=\"noopener\">http://chuansong.me/n/920084451521</a></li>\n</ol>\n","categories":["Android"],"tags":["Android"]},{"title":"如何为小米手机安装 Charles 证书","url":"http://yoursite.com/2017/03/25/xiaomi-charles-crt/","content":"<ol>\n<li>使用第三方浏览器下载 <code>.pem</code> 格式的文件 </li>\n<li>将这个文件放入小米的 <code>DownLoad</code> 文件夹下 </li>\n<li>将 <code>.pem</code> 文件修改为 <code>.crt</code> 格式 </li>\n<li>设置—更多设置—系统安全—从存储设备安装–选择文件，选定该文件 </li>\n</ol>\n<p>亲测，小米 6 Android 8.0，红米note2 Android 5.0.2 可以</p>\n","categories":["随笔"],"tags":[]},{"title":"如何给 Android 原生模拟器配置代理","url":"http://yoursite.com/2017/03/02/android-setting-proxy/","content":"<p><strong>原生模拟器 Android 4.4</strong></p>\n<blockquote>\n<p>设置 –&gt; 移动网络设置 –&gt; 接入点名称（APN）–&gt; T-Mobile US –&gt; 设置代理</p>\n</blockquote>\n<blockquote>\n<p>代理：10.0.2.2  端口：8888</p>\n</blockquote>\n<blockquote>\n<p>设置完之后，开启下飞行模式，过几秒再关闭</p>\n</blockquote>\n","categories":["随笔"],"tags":[]},{"title":"如何设置 BottomSheetDialog 高度","url":"http://yoursite.com/2017/02/18/bottom-sheet-dialog-height/","content":"<p>BottomSheetDialog 控制初始高度是跟 behavior_peekHeight 属性有关</p>\n<h3 id=\"样式主题设置\"><a href=\"#样式主题设置\" class=\"headerlink\" title=\"样式主题设置\"></a>样式主题设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;BottomSheetDialog&quot; parent=&quot;Theme.Design.Light.BottomSheetDialog&quot;&gt;</span><br><span class=\"line\">    &lt;item name=&quot;bottomSheetStyle&quot;&gt;@style/bottomSheetStyleWrapper&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;bottomSheetStyleWrapper&quot; parent=&quot;Widget.Design.BottomSheet.Modal&quot;&gt;</span><br><span class=\"line\">    &lt;item name=&quot;behavior_peekHeight&quot;&gt;500dp&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--代码中应用--&gt;</span><br><span class=\"line\">BottomSheetDialog dialog = new BottomSheetDialog(this, R.style.BottomSheetDialog);</span><br><span class=\"line\">            dialog.setContentView(R.layout.layout_bottom_sheet);</span><br><span class=\"line\">            dialog.show();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动态代码设置\"><a href=\"#动态代码设置\" class=\"headerlink\" title=\"动态代码设置\"></a>动态代码设置</h3><ol>\n<li><p>Dialog 的布局最外层使用 RelativeLayout 或者 ConstraintLayout, 其他控件设置高度无法生效</p>\n</li>\n<li><p>需要在子内容布局设置高度 match_parent；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/rl_container&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:background=&quot;@color/text_white&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:id=&quot;@+id/ll_address_top&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:minHeight=&quot;?attr/actionBarSize&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置高度的代码</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View parent = (View) mContentView.getParent();</span><br><span class=\"line\">if (parent != null) &#123;</span><br><span class=\"line\">    BottomSheetBehavior mBehavior = BottomSheetBehavior.from(parent);</span><br><span class=\"line\">    DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();</span><br><span class=\"line\">    int screenHeight = displayMetrics.heightPixels;</span><br><span class=\"line\">    mBehavior.setPeekHeight((int) (screenHeight * 0.45));</span><br><span class=\"line\">    parent.setBackgroundColor(Color.TRANSPARENT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"简单粗暴直接给父布局一个高度\"><a href=\"#简单粗暴直接给父布局一个高度\" class=\"headerlink\" title=\"简单粗暴直接给父布局一个高度\"></a>简单粗暴直接给父布局一个高度</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/rl_container&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:minHeight=&quot;300dp&quot;</span><br><span class=\"line\">    android:background=&quot;@color/text_white&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:id=&quot;@+id/ll_address_top&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:minHeight=&quot;?attr/actionBarSize&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>","categories":["Android"],"tags":["Android"]},{"title":"常用 Git 相关命令清单","url":"http://yoursite.com/2017/01/01/git-command/","content":"<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ol>\n<li><p><code>git config --global user.name &quot;Your Name&quot;</code> (安装完 git 后，设置用户名与邮箱)</p>\n</li>\n<li><p><code>git config --global user.email &quot;Your email&quot;</code> (设置邮箱)</p>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> (创建 SSH key)</p>\n</li>\n<li><p><code>ssh-agent -s</code> (查看 ssh 是否启用)</p>\n</li>\n<li><p><code>ssh -T git@github.com</code> (验证)</p>\n</li>\n<li><p><code>git init</code> (初始化一个本地仓库)</p>\n</li>\n<li><p><code>git add .</code>(将所有文件加入到跟踪列表)</p>\n</li>\n<li><p><code>git commit -m &quot;write something title&quot;</code> (提交到本地仓库)</p>\n</li>\n<li><p><code>git status</code> (查看 git 文件哪处发生改动)</p>\n</li>\n<li><p><code>git remote add origin git@github.com:github账户名/github创建的库.git</code> (将本地仓库关联到 github 上远程仓库)</p>\n</li>\n<li><p><code>git push -u origin master</code> (将本地仓库的所有内容推送到远程库上，下一次推送时直接 git push)</p>\n</li>\n<li><p><code>git clone URL</code> (克隆远程仓库)</p>\n</li>\n<li><p><code>git branch</code> (查看当前分支)</p>\n</li>\n<li><p><code>git checkout -- filename</code> (文件恢复到最新版本，但丢失最近一次提交后你修改的内容)</p>\n</li>\n<li><p><code>git checkout name</code> (切换分支，name 为分支名称)</p>\n</li>\n<li><p><code>git reset --hard commitNumber</code> (回滚到某个 commit 不保存之前改动过的内容文件)</p>\n</li>\n<li><p><code>git push --force</code> (上条命令回滚之后的变更强行推送至服务器)</p>\n</li>\n<li><p><code>git tag</code> (查看本地 tag 列表)</p>\n</li>\n<li><p><code>git tag -d tagName</code> (删除本地 tag)</p>\n</li>\n<li><p><code>git push origin --tags</code> (将本地 tag 提交到远程)</p>\n</li>\n</ol>\n<h3 id=\"Git-Flow\"><a href=\"#Git-Flow\" class=\"headerlink\" title=\"Git-Flow\"></a>Git-Flow</h3><ol>\n<li><p><code>git flow init</code> (初始化)</p>\n</li>\n<li><p><code>git flow feature start MYFEATURE</code> (开始新 Feature)</p>\n</li>\n<li><p><code>git flow feature publish MYFEATURE</code> (Publish 一个 Feature (也就是 push 到远程))</p>\n</li>\n<li><p><code>git flow feature pull origin MYFEATURE</code> (获取 Publish 的 Feature)</p>\n</li>\n<li><p><code>git flow feature finish MYFEATURE</code> (完成一个 Feature)</p>\n</li>\n<li><p><code>git flow release start RELEASE [BASE]</code> (开始一个 Release)</p>\n</li>\n<li><p><code>git flow release publish RELEASE</code> (Publish 一个 Release)</p>\n</li>\n<li><p><code>git flow release finish RELEASE</code> (发布 Release)</p>\n</li>\n<li><p><code>git push --tags</code> (发布 Release 后进行，push 到远程)</p>\n</li>\n<li><p><code>git flow hotfix start VERSION [BASENAME]</code> (开始一个 Hotfix)</p>\n</li>\n<li><p><code>git flow hotfix finish VERSION</code> (发布一个 Hotfix)</p>\n</li>\n</ol>\n<h3 id=\"Git-Submodule\"><a href=\"#Git-Submodule\" class=\"headerlink\" title=\"Git-Submodule\"></a>Git-Submodule</h3><ol>\n<li><p><code>git submodule add git@github.com:github账户名/github创建的库.git</code> (在已存在 git 仓库添加子仓库)</p>\n</li>\n<li><p><code>git submodule init</code> (初始化 Submodule)</p>\n</li>\n<li><p><code>git submodule update</code> (更新 Submodule)</p>\n</li>\n</ol>\n<h3 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h3><ol>\n<li><p><code>vim filename</code> (打开编辑文件)</p>\n</li>\n<li><p>按一下 <code>i</code> 键 (进行编辑文件)</p>\n</li>\n<li><p>按一下 <code>Esc</code> 键 (退出 <code>i</code> (插入)命令进行其它命令使用)</p>\n</li>\n<li><p><code>:wq</code> (保存文件并退出)</p>\n</li>\n<li><p><code>:q!</code> (强制退出,不保存)</p>\n</li>\n<li><p><code>:w filename</code> (将文件以指定的文件名 filename 保存)</p>\n</li>\n</ol>\n<h3 id=\"Git-Flow-规范理解与延伸\"><a href=\"#Git-Flow-规范理解与延伸\" class=\"headerlink\" title=\"Git-Flow 规范理解与延伸\"></a>Git-Flow 规范理解与延伸</h3><p><img src=\"/images/2017/01/03-1.png\" alt></p>\n<h3 id=\"Git-Commit-规范\"><a href=\"#Git-Commit-规范\" class=\"headerlink\" title=\"Git Commit 规范\"></a>Git Commit 规范</h3><p>为了更加方便查找 git commit 的日志，因此有必要在 commit 的时候进行备注说明类型  </p>\n<p>参考阮老师的文章：<a href=\"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p>与团队成员约定在 commit 填写 message 的时候，在前面加多一个 type，具体的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>feat</td>\n<td>新功能（Feature）</td>\n</tr>\n<tr>\n<td>fix</td>\n<td>修补 bug</td>\n</tr>\n<tr>\n<td>style</td>\n<td>界面样式变动（不影响原有业务代码逻辑）</td>\n</tr>\n<tr>\n<td>build</td>\n<td>Gradle 构建的变动，例如第三方库版本号变动</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>例子：feat: 完成登录注册功能</p>\n</blockquote>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a></li>\n<li><a href=\"https://www.zybuluo.com/Roy270490837/note/835720\" target=\"_blank\" rel=\"noopener\">git-flow流程规范</a></li>\n<li><a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">Git 工具 - 子模块</a></li>\n<li><a href=\"http://blog.devtang.com/2013/05/08/git-submodule-issues/\" target=\"_blank\" rel=\"noopener\">Git submodule的坑</a></li>\n</ul>\n","categories":["Git"],"tags":["Git"]},{"title":"史上最全 Android 面试资料集合","url":"http://yoursite.com/2016/12/12/android-resume/","content":"<p>最近看到很多人都在找工作, 而且很多人都感觉今年找工作比去年难很多, 竞争力也增加不少, 因此激发我整理这份资料, 希望能帮到正在找或者准备找工作的童鞋们.</p>\n<blockquote>\n<p>本文已授权微信公众号 AndroidDeveloper （id: googdev） 独家发布！</p>\n</blockquote>\n<p>首先我们能否获得一个面试机会, 那肯定是从简历开始, 简历需要做好功夫,  一份好的简历才足够吸引企业得到面试机会, 接着就是面试了, 面试前必须要先做好准备, 多看一下前辈们总结面试题, 有哪一方面不足的地方赶紧补充一下, 还有要了解一下你即将面试那家公司.</p>\n<blockquote>\n<p>感谢<a href=\"http://weibo.com/AndroidDevDaily\" target=\"_blank\" rel=\"noopener\">@Android开发日常</a>(专注分享 Android 优质开源项目以及高质量开发资料) 支持</p>\n</blockquote>\n<h3 id=\"教你写简历\"><a href=\"#教你写简历\" class=\"headerlink\" title=\"教你写简历\"></a>教你写简历</h3><ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402970472&idx=1&sn=b9738c66fb5750c2515d57357c01a83f&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">你真的会写简历么?</a></li>\n<li><a href=\"http://j.codekk.com/blogs/detail/5705bcdf4a38205862ef4770\" target=\"_blank\" rel=\"noopener\">80% 以上简历都是不合格的</a></li>\n<li><a href=\"http://j.codekk.com/blogs/detail/5705bcdf4a38205862ef476f\" target=\"_blank\" rel=\"noopener\">推荐两个技术简历模板</a></li>\n<li><a href=\"http://lucida.me/blog/lean-technical-resume/\" target=\"_blank\" rel=\"noopener\">精益技术简历之道——改善技术简历的 47 条原则</a></li>\n<li><a href=\"https://mdluo.github.io/blog/about-resume/\" target=\"_blank\" rel=\"noopener\">关于程序员求职简历</a></li>\n<li><a href=\"https://github.com/geekcompany/ResumeSample\" target=\"_blank\" rel=\"noopener\">程序员简历模板列表</a></li>\n</ul>\n<h3 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h3><ul>\n<li><a href=\"https://github.com/JackyAndroid/AndroidInterview-Q-A\" target=\"_blank\" rel=\"noopener\">国内一线互联网公司内部面试题库</a></li>\n<li><a href=\"https://github.com/GeniusVJR/LearningNotes\" target=\"_blank\" rel=\"noopener\">Android 开发工程师面试指南</a></li>\n<li><a href=\"http://gdky005.com/2016/07/08/%E4%B8%80%E4%B8%AA%E4%BA%94%E5%B9%B4Android%E5%BC%80%E5%8F%91%E8%80%85%E7%99%BE%E5%BA%A6%E3%80%81%E9%98%BF%E9%87%8C%E3%80%81%E8%81%9A%E7%BE%8E%E3%80%81%E6%98%A0%E5%AE%A2%E7%9A%84%E9%9D%A2%E8%AF%95%E5%BF%83%E7%BB%8F/\" target=\"_blank\" rel=\"noopener\">一个五年 Android 开发者百度, 阿里, 聚美, 映客的面试心经</a></li>\n<li><a href=\"https://github.com/leerduo/InterviewQuestion\" target=\"_blank\" rel=\"noopener\">整理常见 Android 面试问题</a></li>\n<li><a href=\"http://yuweiguocn.github.io/2016/04/13/interview-2016-big-company/\" target=\"_blank\" rel=\"noopener\">2016 Android 某公司面试题</a></li>\n<li><a href=\"http://kymjs.com/code/2016/03/08/01/\" target=\"_blank\" rel=\"noopener\">面试后的总结</a></li>\n<li><a href=\"http://www.jianshu.com/p/a22450882af2\" target=\"_blank\" rel=\"noopener\">Android 面试题整理</a></li>\n<li><a href=\"http://androidquestions.quora.com/Android-interview-questions-for-2-5-yrs-experienced\" target=\"_blank\" rel=\"noopener\">Android interview questions for 2-5 yrs experienced</a></li>\n<li><a href=\"http://androidquestions.quora.com/Android-interview-questions\" target=\"_blank\" rel=\"noopener\">Android interview questions</a></li>\n<li><a href=\"http://www.devstore.cn/essay/essayInfo/7195.html\" target=\"_blank\" rel=\"noopener\">40 个 Android 面试题</a></li>\n<li><a href=\"https://github.com/Mr-YangCheng/ForAndroidInterview\" target=\"_blank\" rel=\"noopener\">Android 名企面试题及涉及知识点整理</a></li>\n<li><a href=\"http://www.jianshu.com/p/89f19d67b348\" target=\"_blank\" rel=\"noopener\">亲爱的面试官，这个我可没看过！（Android部分）</a></li>\n</ul>\n<h3 id=\"做题\"><a href=\"#做题\" class=\"headerlink\" title=\"做题\"></a>做题</h3><p>看完面试题之后那就来做一下面试题目吧, 目前找到两个网站</p>\n<ul>\n<li><a href=\"http://skillgun.com/android/interview-questions-and-answers\" target=\"_blank\" rel=\"noopener\">SillGun</a>(国外网站, 自备梯子)</li>\n<li><a href=\"http://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">牛客网</a></li>\n</ul>\n<h3 id=\"聊面试\"><a href=\"#聊面试\" class=\"headerlink\" title=\"聊面试\"></a>聊面试</h3><p><a href=\"http://stormzhang.com/\" target=\"_blank\" rel=\"noopener\">(帅张)stormzhang</a> 跟你谈一下面试那些事儿</p>\n<ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=2650661810&idx=1&sn=f8c1ca67527459db3189a978f0e44cef&scene=23&srcid=08101MZAPzGR1MC1C577enim#rd\" target=\"_blank\" rel=\"noopener\">面试时企业最看中你什么能力?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21343656?refer=stormzhang\" target=\"_blank\" rel=\"noopener\">我面试到底问什么?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21565914?refer=stormzhang\" target=\"_blank\" rel=\"noopener\">Android 面试那些事儿</a></li>\n</ul>\n<h3 id=\"知乎讨论\"><a href=\"#知乎讨论\" class=\"headerlink\" title=\"知乎讨论\"></a>知乎讨论</h3><ul>\n<li><a href=\"https://www.zhihu.com/question/19765032\" target=\"_blank\" rel=\"noopener\">面试时, 问哪些问题能试出一个 Android 应用开发者真正的水平?</a></li>\n<li><a href=\"https://www.zhihu.com/question/38982159\" target=\"_blank\" rel=\"noopener\">我用个假简历去面试 android 的结果为什么会这样?</a></li>\n<li><a href=\"https://www.zhihu.com/question/37483907\" target=\"_blank\" rel=\"noopener\">怎么准备Android面试?</a></li>\n</ul>\n<h3 id=\"互联网招聘平台\"><a href=\"#互联网招聘平台\" class=\"headerlink\" title=\"互联网招聘平台\"></a>互联网招聘平台</h3><ul>\n<li><a href=\"http://www.lagou.com/\" target=\"_blank\" rel=\"noopener\">拉勾-专注互联网职业机会</a></li>\n<li><a href=\"https://jianxun.io/\" target=\"_blank\" rel=\"noopener\">简寻-让职位推荐更精准</a></li>\n<li><a href=\"https://100offer.com/\" target=\"_blank\" rel=\"noopener\">100 offer-帮最好的互联网人发现更好的offer</a></li>\n<li><a href=\"https://www.bosszhipin.com/home/#index\" target=\"_blank\" rel=\"noopener\">BOSS 直聘-互联网招聘神器</a></li>\n<li><a href=\"https://www.linkedin.com/\" target=\"_blank\" rel=\"noopener\">LinkedIn (领英)</a></li>\n<li><a href=\"https://www.nashangban.com/\" target=\"_blank\" rel=\"noopener\">哪上班</a></li>\n</ul>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><p>非常感谢上面分享面试资料以及面试经验的前辈们!\n有前辈在前面带路, 我们后辈真心感到幸福.</p>\n<h3 id=\"祝福\"><a href=\"#祝福\" class=\"headerlink\" title=\"祝福\"></a>祝福</h3><p>最后祝正在找工作的的童鞋们, 马到成功, 心想事成, 事事如意!</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>欢迎关注我 <a href=\"https://github.com/Freelander\" target=\"_blank\" rel=\"noopener\">Github</a> 以及 <a href=\"http://weibo.com/gaojunhuang\" target=\"_blank\" rel=\"noopener\">微博</a></p>\n","categories":["Android"],"tags":["Android","面试"]},{"title":"开发 Material Design+RxJava+Retrofit+MVP App 参考资料","url":"http://yoursite.com/2016/06/06/android-elephant/","content":"<p><img src=\"/images/2016-01.jpeg\" alt></p>\n<p>这里记录了我开发 <a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">大象</a> 项目时，所学习的开发资料以及参考的开源项目，稍微整理了一下，全当笔记记录，跟大家一起分享，也许能给正在使用 RxJava + Retrofit + MVP + Material Design 框架开发的人一个参考学习，如果有人从我分享的资料当中学习到东西，那是我的荣幸，希望大家能与我一起努力。</p>\n<p>之前看到很多人都使用 RxJava+Retrofit+MVP 来开发 App, 然而自己一直没有时间来实践，最近有空就开始着手开发 PHPHub 社区第三方 Android 客戶端，至于我为什么选择了开发 PHPHub 社区，有兴趣的哥们可以到 <a href=\"https://laravel-china.org/topics/3083\" target=\"_blank\" rel=\"noopener\">这里</a> 去看看。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><blockquote>\n<p>欢迎关注我 <a href=\"https://github.com/Freelander\" target=\"_blank\" rel=\"noopener\">Github</a> 以及 <a href=\"http://weibo.com/gaojunhuang\" target=\"_blank\" rel=\"noopener\">微博</a></p>\n</blockquote>\n<h3 id=\"大象源码链接\"><a href=\"#大象源码链接\" class=\"headerlink\" title=\"大象源码链接\"></a>大象源码链接</h3><blockquote>\n<p><a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">https://github.com/Freelander/Elephant</a></p>\n</blockquote>\n<h3 id=\"RxJava-与-Retrofit-参考学习的资料\"><a href=\"#RxJava-与-Retrofit-参考学习的资料\" class=\"headerlink\" title=\"RxJava 与 Retrofit 参考学习的资料\"></a>RxJava 与 Retrofit 参考学习的资料</h3><h5 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h5><ul>\n<li><a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"noopener\">给 Android 开发者的 RxJava 详解</a></li>\n<li><a href=\"http://gank.io/post/56e80c2c677659311bed9841\" target=\"_blank\" rel=\"noopener\">RxJava 与 Retrofit 结合的最佳实践</a></li>\n<li><a href=\"http://blog.csdn.net/theone10211024/article/details/50435325\" target=\"_blank\" rel=\"noopener\">可能是东半球最全的 RxJava 使用场景小结</a></li>\n<li><a href=\"http://www.jianshu.com/p/64aa976a46be\" target=\"_blank\" rel=\"noopener\">Rxjava 实战</a></li>\n<li><a href=\"http://wuxiaolong.me/2016/06/18/retrofits/\" target=\"_blank\" rel=\"noopener\">Android Retrofit 2.0 使用-补充篇</a></li>\n</ul>\n<h5 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h5><ul>\n<li><a href=\"https://github.com/rengwuxian/RxJavaSamples\" target=\"_blank\" rel=\"noopener\">RxJavaSamples</a></li>\n<li><a href=\"https://github.com/kaushikgopal/RxJava-Android-Samples\" target=\"_blank\" rel=\"noopener\">RxJava-Android-Samples</a></li>\n</ul>\n<h5 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h5><ul>\n<li><a href=\"http://boolan.com/lecture/1000001243#0-tsina-1-68759-397232819ff9a47a7b7e80a40613cfe1\" target=\"_blank\" rel=\"noopener\">Android 开发者们一定会喜欢的 RxJava</a></li>\n<li><a href=\"https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/\" target=\"_blank\" rel=\"noopener\">用 Retrofit 2 简化 HTTP 请求</a></li>\n<li><a href=\"https://realm.io/cn/news/kau-felipe-lima-adopting-rxjava-airbnb-android/\" target=\"_blank\" rel=\"noopener\">Airbnb：我们的安卓客户端是如何使用 RxJava 的</a></li>\n</ul>\n<h5 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h5><ul>\n<li><a href=\"https://mcxiaoke.gitbooks.io/rxdocs/content/\" target=\"_blank\" rel=\"noopener\">ReactiveX/RxJava 文档中文版</a></li>\n</ul>\n<h3 id=\"MVP-参考学习的资料\"><a href=\"#MVP-参考学习的资料\" class=\"headerlink\" title=\"MVP 参考学习的资料\"></a>MVP 参考学习的资料</h3><h5 id=\"文章-1\"><a href=\"#文章-1\" class=\"headerlink\" title=\"文章\"></a>文章</h5><ul>\n<li><a href=\"http://www.zjutkz.net/2016/04/13/%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E7%9A%84%E7%A6%8F%E9%9F%B3%EF%BC%81%E6%95%99%E4%BD%A0%E8%AE%A4%E6%B8%85MVC%EF%BC%8CMVP%E5%92%8CMVVM/\" target=\"_blank\" rel=\"noopener\">选择恐惧症的福音, 教你认清 MVC, MVP 和 MVVM</a></li>\n<li><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0202/2397.html\" target=\"_blank\" rel=\"noopener\">在 Android 开发中使用 MVP 模式</a></li>\n<li><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0413/4139.html\" target=\"_blank\" rel=\"noopener\">Android官方MVP架构示例项目解析</a></li>\n</ul>\n<h5 id=\"项目-1\"><a href=\"#项目-1\" class=\"headerlink\" title=\"项目\"></a>项目</h5><ul>\n<li><a href=\"https://github.com/antoniolg/androidmvp\" target=\"_blank\" rel=\"noopener\">androidmvp</a></li>\n<li><a href=\"https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/\" target=\"_blank\" rel=\"noopener\">android-architecture</a></li>\n<li><a href=\"https://github.com/north2014/T-MVP\" target=\"_blank\" rel=\"noopener\">T-MVP</a></li>\n</ul>\n<h3 id=\"多主题切换\"><a href=\"#多主题切换\" class=\"headerlink\" title=\"多主题切换\"></a>多主题切换</h3><ul>\n<li><a href=\"http://www.jianshu.com/p/3b55e84742e5\" target=\"_blank\" rel=\"noopener\">知乎和简书的夜间模式实现套路</a></li>\n</ul>\n<h3 id=\"参考项目\"><a href=\"#参考项目\" class=\"headerlink\" title=\"参考项目\"></a>参考项目</h3><ul>\n<li><a href=\"https://github.com/drakeet/Meizhi\" target=\"_blank\" rel=\"noopener\">Meizhi</a> (非常棒的一个项目, 参考了挺多)</li>\n<li><a href=\"https://github.com/CycloneAxe/phphub-android\" target=\"_blank\" rel=\"noopener\">PHPHub-Android</a>（PHPHub 官方客户端）</li>\n</ul>\n<h3 id=\"UI-设计\"><a href=\"#UI-设计\" class=\"headerlink\" title=\"UI 设计\"></a>UI 设计</h3><h5 id=\"参考-App\"><a href=\"#参考-App\" class=\"headerlink\" title=\"参考 App\"></a>参考 App</h5><ul>\n<li><a href=\"http://zhihu.com/\" target=\"_blank\" rel=\"noopener\">知乎</a></li>\n<li><a href=\"http://gold.xitu.io/\" target=\"_blank\" rel=\"noopener\">掘金</a></li>\n<li><a href=\"https://github.com/CycloneAxe/phphub-android\" target=\"_blank\" rel=\"noopener\">PHPHub-Android</a></li>\n</ul>\n<h5 id=\"图标素材来源\"><a href=\"#图标素材来源\" class=\"headerlink\" title=\"图标素材来源\"></a>图标素材来源</h5><ul>\n<li><a href=\"https://icons8.com/\" target=\"_blank\" rel=\"noopener\">Ions8</a></li>\n</ul>\n<h5 id=\"Material-Design-设计规范\"><a href=\"#Material-Design-设计规范\" class=\"headerlink\" title=\"Material Design 设计规范\"></a>Material Design 设计规范</h5><ul>\n<li><a href=\"https://material.google.com/\" target=\"_blank\" rel=\"noopener\">Material design</a></li>\n<li><a href=\"https://github.com/1sters/material_design_zh_2\" target=\"_blank\" rel=\"noopener\">Material Design 中文版</a></li>\n</ul>\n<h5 id=\"设计灵感来源\"><a href=\"#设计灵感来源\" class=\"headerlink\" title=\"设计灵感来源\"></a>设计灵感来源</h5><ul>\n<li><a href=\"https://material.uplabs.com/\" target=\"_blank\" rel=\"noopener\">Uplabs</a></li>\n<li><a href=\"https://dribbble.com/\" target=\"_blank\" rel=\"noopener\">Dribbble</a></li>\n<li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"noopener\">优设</a></li>\n</ul>\n<h2 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h2><p>感谢以上所有分享的资料以及开源项目大神们。</p>\n","categories":["Android"],"tags":["Android","Material Design"]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]